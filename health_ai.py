# -*- coding: utf-8 -*-
"""health Ai

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1g_8Ad88U101jXThf6CyII8pTCXhv9R3a
"""

!pip install requests

import os
os.environ["healthai"] = "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"

import requests

def ask_health_ai(prompt, model_id="HuggingFaceH4/zephyr-7b-beta"):
    headers = {
        "Authorization": f"Bearer {os.environ['h_e_a_l_t_h']}",
        "Content-Type": "application/json"
    }

    payload = {
        "inputs": prompt,
        "parameters": {
            "temperature": 0.7,
            "max_new_tokens": 300
        }
    }

    url = f"https://api-inference.huggingface.co/models/{model_id}"
    response = requests.post(url, headers=headers, json=payload)

    if response.status_code == 200:
        return response.json()[0]["generated_text"]
    else:
        return f" Error {response.status_code}: {response.text}"

import os
import requests

# ‚úÖ Step 1: Set your API Key correctly (ENV variable)
os.environ["healthai"] = "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"

# ‚úÖ Step 2: Function to talk to Hugging Face model
def ask_health_ai(prompt, model_id="HuggingFaceH4/zephyr-7b-beta"):
    headers = {
        "Authorization": f"Bearer {os.environ['healthai']}",  # Fixed env var name
        "Content-Type": "application/json"
    }

    payload = {
        "inputs": prompt,
        "parameters": {
            "temperature": 0.7,
            "max_new_tokens": 300
        }
    }

    url = f"https://api-inference.huggingface.co/models/{model_id}"
    response = requests.post(url, headers=headers, json=payload)

    if response.status_code == 200:
        try:
            return response.json()[0]["generated_text"]
        except (KeyError, IndexError):
            return "Unexpected response format: " + str(response.json())
    else:
        return f"‚ùå Error {response.status_code}: {response.text}"

# ‚úÖ Step 3: Disease prediction logic
def predict_disease(symptoms):
    prompt = f"A patient is experiencing the following symptoms: {symptoms}. What is the most likely disease, and what are the next steps for treatment?"
    return ask_health_ai(prompt)

# ‚úÖ Step 4: Run the function and print result
response = predict_disease("persistent headache, blurred vision, excessive thirst")
print("üß† Disease Predictor says:\n")
print(response)

response = predict_disease("persistent headache, blurred vision, excessive thirst")
print(" Disease Predictor says:\n")
print(response)

response = predict_disease("sneezing, runny nose, sore throat, mild fever")
print(" Disease Predictor says:\n")
print(response)